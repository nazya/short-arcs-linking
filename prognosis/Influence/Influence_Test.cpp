//==============================================================================//
// Andrianov N.G.
// opbit predict 
// module find Influence Force
// Nutation Earth
//==============================================================================//
#include <math.h>
#include <stdio.h>

#include "InfluenceForce.h"

namespace Force
{
	//==============================================================================//
	// функция тестирования правильности вычисления поворота
	// http://hpiers.obspm.fr/eop-pc/index.php?index=matrice_php&lang=fr
	// out 1
	//tab[i4+1] = 35.000000
	//tdb_utc return 67.184000
	//set_time: Data = 20120922.000000, Time = 202215.000000
	//t = 73.335000,   jd = 2456192.500000 delta -10.732816, CH = 20.370833
	//ITRF to ICRF
	//-1.327546022239e-001     9.911481274985e-001     1.266864067341e-003
	//-9.911489262903e-001     -1.327546814281e-001    -2.173887142407e-005
	//1.466356939667e-004      -1.258536895330e-003    9.999991972911e-001
	//IERS res:
	//-1.327545872600e-001     9.911481297030e-001     1.266707241000e-003
	//-9.911489283060e-001     -1.327546663710e-001    -2.179443100000e-005
	//1.465597880000e-004      -1.258388835000e-003    9.999991974890e-001
	//Delta IERS
	//-1.496387300182e-008     -2.204483262602e-009    1.568263414890e-007
	//2.015730249383e-009      -1.505706484495e-008    5.555957592839e-008
	//7.590596667645e-008      -1.480603299404e-007    -1.978939234704e-01110
	//
	// out 2
	//tab[i4+1] = 35.000000
	//tdb_utc return 67.184000
	//set_time: Data = 20130215.000000, Time = 160853.000000
	//t = 58.133000,   jd = 2456338.500000 delta -10.732816, CH = 16.148056
	//ITRF to ICRF
	//9.550444502895e-001      2.964597735295e-001     1.304089754509e-003
	//-2.964599918975e-001     9.550452724745e-001     -2.698714095229e-005
	//-1.253465356621e-003     -3.608365188597e-004    9.999991493104e-001
	//IERS res:
	//9.550441611240e-001      2.964607054200e-001     1.304011320000e-003
	//-2.964609236470e-001     9.550449832430e-001     -2.707748000000e-005
	//-1.253416878000e-003     -3.607282110000e-004    9.999991494100e-001
	//Delta IERS
	//2.891654781179e-007      -9.318904692912e-007    7.843450902634e-008
	//9.317494958361e-007      2.892314655556e-007     9.033904770511e-008
	//-4.847862116559e-008     -1.083078596726e-007    -9.955891666635e-011
	//==============================================================================//
	int InfluenceForce::TestRotation()
	{
		printf("Test Rotation\n");
		// 1
		//2012 9 22     17 h 22 min 15 s   UTC 
		//double date1 = 20120922.0;
		//double time1 = 202215.0;//21594247; //(UTC+3:00)
		// 2
		// 2013 2 15     13 h 08 min 53 s   UTC 
		double date1 = 20130215.0;
		double time1 = 160853.0;//(UTC+3:00)

		double t1, ajd1, delt1;
		set_time(date1, time1, &ajd1, &delt1, &t1 );

		// матрица поворота из ITRF в ICRF
		// из солнечной системы в земную систему
		double A_rot_to[9];
		iers_update_matrix( t1, A_rot_to, ajd1, delt1 );
		double A_rot[9];
		transpose( A_rot_to, A_rot ); 

		printf( "ITRF to ICRF\n" );
		for( int j = 0; j < 9; j += 3 )
		{
			printf("%.12e\t %.12e\t %.12e\n", A_rot[j+0], A_rot[j+1], A_rot[j+2] );
		}

		// Transformation coordinate M from the international terrestrial reference system (ITRF)
		// to the international celestial reference frame (ICRF) : 
		// Celestial coordinates ( X Y Z) = M x Terrestrial coordinates ( x y z )

		// 1
		//2012 9 22     17 h 22 min 15 s   UTC 
        //double A_iers[9] = { -0.132754587260,     0.991148129703,     0.001266707241, 
		//					  -0.991148928306,    -0.132754666371,    -0.000021794431, 
		//					  0.000146559788,    -0.001258388835,     0.999999197489}; 

		 // 2
		 //2013 2 15     13 h 08 min 53 s   UTC 
       	double A_iers[9] = {   0.955044161124,     0.296460705420 ,    0.001304011320, 
							  -0.296460923647,     0.955044983243,    -0.000027077480, 
							  -0.001253416878,    -0.000360728211,     0.999999149410   };

		printf( "IERS res:\n" );
		for( int j = 0; j < 9; j += 3 )
		{
			printf("%.12e\t %.12e\t %.12e\n", A_iers[j+0], A_iers[j+1], A_iers[j+2] );
		}

		printf( "Delta IERS\n" );
		for( int j = 0; j < 9; j += 3 )
		{
			printf("%.12e\t %.12e\t %.12e\n", A_rot[j+0]-A_iers[j+0], A_rot[j+1]-A_iers[j+1], A_rot[j+2]-A_iers[j+2] );
		}

		return 0;
	}
	//==============================================================================//
};